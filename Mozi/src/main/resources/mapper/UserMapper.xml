<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.sy.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="imei" property="imei" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
   	<result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="calibration" property="calibration" jdbcType="INTEGER" />
    <result column="jfdataUpdateTime" property="jfdataUpdateTime" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="isDelete" property="isDelete" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="REAL" />
    <result column="born" property="born" jdbcType="TIMESTAMP" />
    <result column="height" property="height" jdbcType="REAL" />
    <result column="walkCount" property="walkCount" jdbcType="VARCHAR" />
    <result column="love" property="love" jdbcType="INTEGER" />
    <result column="bedId" property="bedId" jdbcType="BIGINT" />
    <result column="nurseId" property="nurseId" jdbcType="BIGINT" />
    <result column="liveTime" property="liveTime" jdbcType="TIMESTAMP" />
    <result column="illness" property="illness" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role, account, password, isDelete,name, age, gender, phone, calibration,province,city,area,address, avatar,
    createtime, weight, height, born, code,imei,walkCount,love,bedId,nurseId,liveTime,illness
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER} and isDelete=0
  </select>
  <!-- 更改user的状态,逻辑删除 -->
  <update id="deleteUser" parameterType="java.lang.Integer" >
    update user set isDelete=1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="ifUser" parameterType="java.lang.String" resultMap="BaseResultMap">
      select * from  user where  account = #{account} and isDelete=0 limit 0,1
  </select>
  <select id="landingUser" parameterType="com.sy.pojo.User" resultMap="BaseResultMap">
  			select * from user where  account = #{account} and password = #{password} and isDelete=0
  </select>
  <select id="getpassword" parameterType="java.util.Map" resultMap="BaseResultMap">
      select * from  User  where password = #{password} and  id=#{id} and isDelete=0
  </select>
  <select id="phoenselectuser" parameterType="java.lang.String" resultMap="BaseResultMap">
  		select * from user where phone = #{phone} and isDelete=0
  </select>
  <!-- 查询个人资料 -->
  <select id="queryUserInfo" parameterType="com.sy.utils.DataRow" resultType="com.sy.utils.DataRow">
		  SELECT tp.id,tt.id as eqId,tp.name,tp.imei,gender,height,weight,DATE_FORMAT(born,'%Y-%m-%d') as born,province,city,area,
		CASE WHEN phone IS NULL THEN '' ELSE phone END as phone,
		CASE WHEN illness IS NULL THEN '' ELSE illness END as illness,
		CASE WHEN address IS NULL THEN '' ELSE address END as address,
		CASE WHEN phone1 IS NULL THEN '' ELSE phone1 END as phone1,
		CASE WHEN phone2 IS NULL THEN '' ELSE phone2 END as phone2 
		FROM user tp
		INNER JOIN equipment tt
		ON tp.imei=tt.imei
		WHERE tp.id=#{userId} and isDelete=0
  </select>
  <select id="selectaccount" parameterType="java.lang.String" resultMap="BaseResultMap">
  		select * from user where account = #{account} and isDelete=0
  </select>
  <!-- 查询个人主页使用者的个人信息-啊健 -->
  <select id="queryHomepageUserInfo" resultMap="BaseResultMap"  parameterType="java.util.Map">
  SELECT * from user  WHERE id=#{userid} and isDelete=0
  </select>
  <select id="getUser"  parameterType="java.lang.String" resultMap="BaseResultMap">
	 SELECT * from user  WHERE imei = #{imei} and isDelete=0 limit 0,1
  </select>
  <!-- 个人中心页面数据这个估计要删除的 -->
  <select id="queryPersonalCenter" parameterType="java.lang.Integer" resultType="com.sy.vo.LoginReturn">
 	SELECT id,name,avatar,(SELECT COUNT(*) FROM user_eq WHERE user_id=#{userId} AND typeof=0) as aliasCount,(SELECT COUNT(*) FROM user_eq WHERE user_id=#{userId} AND typeof=1) as observerCount,
	(SELECT COUNT(*) FROM group_relation WHERE relationUserId=#{userId}) as groupCount FROM user WHERE id=#{userId}
  </select>
   <!-- 个人中心页面数据 -->
  <select id="queryPersonalCenter2" parameterType="java.lang.Integer" resultType="com.sy.vo.Personal">
  		SELECT id as alias,name,avatar,(SELECT COUNT(*) FROM user_eq tp
		INNER JOIN (SELECT * FROM user_eq WHERE typeof=0 AND user_id=#{userId}) tt
		ON tp.eq_id=tt.eq_id and tp.typeof=2
		INNER JOIN (SELECT * FROM user WHERE isDelete=0) tc
		ON tp.user_id=tc.id) as aliasCount,
		(SELECT COUNT(*) FROM user_eq tp
		INNER JOIN (SELECT * FROM user_eq WHERE typeof=1 AND user_id=#{userId}) tt
		ON tp.eq_id=tt.eq_id and tp.typeof=2
		INNER JOIN (SELECT * FROM user WHERE isDelete=0) tc
		ON tp.user_id=tc.id) as observerCount,
		(SELECT COUNT(*) FROM group_relation WHERE relationUserId=#{userId}) as groupCount FROM user WHERE id=#{userId}
  </select>
  <!--  点击卡片查询 -->
  <select id="queryUserData" parameterType="com.sy.utils.DataRow" resultType="com.sy.utils.DataRow">
	SELECT tp.id,tp.imei,tp.name,tp.avatar,CONCAT(tt.charges,'元') AS charges,tt.integral,tt.member,tp.calibration,tp.jfdataUpdateTime,td.allNotifyOn,
	(SELECT tp.typeof FROM user_eq tp
	INNER JOIN (SELECT * FROM user_eq WHERE user_id=#{userId}) tt
	ON tp.eq_id=tt.eq_id
	 WHERE tp.user_id=#{alias}) as type_of
 	FROM user tp
	INNER JOIN member tt
	ON tp.id=tt.userId
	INNER JOIN (SELECT * FROM push WHERE alias=#{alias} AND userId=#{userId}) td
	ON tp.id=td.userId
	WHERE tp.id=#{userId} AND tp.isDelete=0
  </select>
  <!-- 通过使用者ID查询首页需要的数据-->
	<select id="queryUsersInfo" parameterType="com.sy.utils.DataRow" resultType="com.sy.utils.DataRow">
		SELECT tp.id as userId,tt.id as eq_id,tp.name,tt.eq_status,tv.positioning_data,tp.avatar,tp.imei,tp.age,tp.calibration,tt.bluetooth_list as bluetoothList FROM user tp
		INNER JOIN equipment tt
		ON tp.imei=tt.imei
		INNER JOIN (SELECT * FROM positionig WHERE imei=(SELECT imei from user WHERE id=#{userId}) ORDER BY createtime DESC LIMIT 1) tv
		WHERE tp.id=#{userId} and isDelete=0
	</select>
</mapper>