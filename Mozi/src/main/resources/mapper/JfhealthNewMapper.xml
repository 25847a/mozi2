<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mapper.JfhealthNewMapper" >
  <resultMap id="BaseResultMap" type="com.sy.pojo.JfhealthNew" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="HRV" property="HRV" jdbcType="INTEGER" />
    <result column="sbp_ave" property="sbpAve" jdbcType="INTEGER" />
    <result column="dbp_ave" property="dbpAve" jdbcType="INTEGER" />
    <result column="Heartrate" property="heartrate" jdbcType="INTEGER" />
    <result column="Bloodoxygen" property="bloodoxygen" jdbcType="INTEGER" />
    <result column="microcirculation" property="microcirculation" jdbcType="INTEGER" />
    <result column="respirationrate" property="respirationrate" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="imei" property="imei" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sy.pojo.JfhealthNew" extends="BaseResultMap" >
    <result column="Amedicalreport" property="amedicalreport" jdbcType="LONGVARCHAR" />
  </resultMap>
   <!-- 获取惊凡的健康数据 -->
    <resultMap type="com.sy.vo.Chart" id="ChartBaseResultMap" extends="BaseResultMap">
		<result column="HRV" property="HRV" jdbcType="INTEGER" />
		<result column="sbp_ave" property="sbpAve" jdbcType="INTEGER" />
		<result column="dbp_ave" property="dbpAve" jdbcType="INTEGER" />
		<result column="Heartrate" property="heartrate"
			jdbcType="INTEGER" />
		<result column="Bloodoxygen" property="bloodoxygen"
			jdbcType="INTEGER" />
		<result column="microcirculation" property="microcirculation"
			jdbcType="INTEGER" />
		<result column="respirationrate" property="respirationrate"
			jdbcType="INTEGER" />
		<result column="date" property="date" jdbcType="TIMESTAMP" />
	</resultMap> 
	  <!-- 获取树洪的健康数据 -->
	<resultMap type="com.sy.vo.SHChart" id="SHChartBaseResultMap" extends="BaseResultMap">
		<result column="sleeping" property="sleeping" jdbcType="INTEGER" />
		<result column="step_when" property="step_when" jdbcType="INTEGER" />
		<result column="date" property="date" jdbcType="TIMESTAMP" />
	</resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, HRV, sbp_ave, dbp_ave, Heartrate, Bloodoxygen, microcirculation, respirationrate, 
    phone, imei, createtime
  </sql>
  <sql id="Blob_Column_List" >
    Amedicalreport
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jfhealth_new
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jfhealth_new
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="countImei" parameterType="java.lang.String" resultType="java.lang.Integer" >
    select count(id) from jfhealth_new where imei = #{imei}
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.sy.pojo.JfhealthNew" >
    update jfhealth_new
    <set >
      <if test="HRV != null" >
        HRV = #{HRV,jdbcType=INTEGER},
      </if>
      <if test="sbpAve != null" >
        sbp_ave = #{sbpAve,jdbcType=INTEGER},
      </if>
      <if test="dbpAve != null" >
        dbp_ave = #{dbpAve,jdbcType=INTEGER},
      </if>
      <if test="heartrate != null" >
        Heartrate = #{heartrate,jdbcType=INTEGER},
      </if>
      <if test="bloodoxygen != null" >
        Bloodoxygen = #{bloodoxygen,jdbcType=INTEGER},
      </if>
      <if test="microcirculation != null" >
        microcirculation = #{microcirculation,jdbcType=INTEGER},
      </if>
      <if test="respirationrate != null" >
        respirationrate = #{respirationrate,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="imei != null" >
        imei = #{imei,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="amedicalreport != null" >
        Amedicalreport = #{amedicalreport,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sy.pojo.JfhealthNew" >
    update jfhealth_new
    set HRV = #{HRV,jdbcType=INTEGER},
      sbp_ave = #{sbpAve,jdbcType=INTEGER},
      dbp_ave = #{dbpAve,jdbcType=INTEGER},
      Heartrate = #{heartrate,jdbcType=INTEGER},
      Bloodoxygen = #{bloodoxygen,jdbcType=INTEGER},
      microcirculation = #{microcirculation,jdbcType=INTEGER},
      respirationrate = #{respirationrate,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      imei = #{imei,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
	 <select id="getcount" parameterType="java.lang.String" resultType="java.lang.Integer">
      select count(*) from  jfhealth_new 
      <if test="_parameter != null and _parameter != '' ">
   			 where  CONCAT(imei)  LIKE concat(concat('%',#{_parameter}),'%')
  	  </if> 
  </select>
  <select id="newJfhealthNew" parameterType="java.lang.String"  resultMap="BaseResultMap">
 SELECT *  
		FROM jfhealth_new where imei=#{imei}
		ORDER BY createtime desc 
		LIMIT 0, 1
  
  </select>
  <!-- 啊健(极光推送获取惊凡最新健康数据) -->
  <select id="pushJfhealthNew" parameterType="java.lang.String"  resultMap="BaseResultMap">
  	SELECT *FROM jfhealth_new WHERE phone =#{alias} ORDER BY createtime LIMIT 0,1
  </select>
  
  <delete id="deletejfhealth" parameterType="java.lang.String" >
  	delete from jfhealth where phone = #{phone}
  </delete>
  
</mapper>